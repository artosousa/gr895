---
interface Game {
  id: number;
  season: number;
  gameType: number;
  gameDate: string; // Ensure this is a string representing a date
  venue: {
    default: string;
  };
  neutralSite: boolean;
  startTimeUTC: string;
  easternUTCOffset: string;
  venueUTCOffset: string;
  venueTimezone: string;
  gameState: string;
  gameScheduleState: string;
  tvBroadcasts: any[]; // You can refine this type as necessary
  awayTeam: any; // Refine as needed
  homeTeam: any; // Refine as needed
  periodDescriptor: any; // Refine as needed
  ticketsLink: string;
  ticketsLinkFr: string;
  gameCenterLink: string;
}
const response = await fetch('https://api-web.nhle.com/v1/player/8471214/landing')
const sched = await fetch('https://api-web.nhle.com/v1/club-schedule-season/WSH/now')
const data = await response.json()
const schedData = await sched.json()
const games = schedData.games
const today = new Date().toISOString().split('T')[0]
const futureGames = games.filter((game: Game) => game.gameDate >= today)
const {teamLogo} = data
const careerGoals = data.featuredStats.regularSeason.career.goals
const goalRecord = 895
const {goals} = data.featuredStats.regularSeason.subSeason
const name = `${data.firstName.default} ${data.lastName.default}`
const careerGamesPlayed = data.featuredStats.regularSeason.career.gamesPlayed
const {gamesPlayed} = data.featuredStats.regularSeason.subSeason
const {heroImage} = data
const {headshot} = data
const fullSeason = 82
const goalPace = Math.round((goals / gamesPlayed) * fullSeason)
const goalsToGo = goalRecord - careerGoals
const goalAverage = (goals / gamesPlayed)
const gamesToGo = Math.round((goalsToGo / goalAverage))
const theGame = futureGames[gamesToGo]
const gameDate = new Date(theGame.gameDate)
const formattedDate = gameDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
  timeZone: 'UTC' // Ensures the date stays in UTC
});
const gameNumber = 0
---

<html lang="en">
	<head>
		<!-- Google tag (gtag.js) -->
		<script type="text/partytown" async src="https://www.googletagmanager.com/gtag/js?id=G-DN9KK1YW8K"></script>
		<script type="text/partytown">
			window.dataLayer = window.dataLayer || [];
			function gtag(){dataLayer.push(arguments);}
			gtag('js', new Date());
	
			gtag('config', 'G-DN9KK1YW8K');
		</script>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href={teamLogo} />
		<link rel="stylesheet" href="https://use.typekit.net/yke1otl.css">
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<meta property="og:image" content=`https://gr895.com/OG.png`>
		<meta property="og:image:width" content="1200">
		<meta property="og:image:height" content="630">
		<meta property="og:description" content=`${name} has got ${goalRecord} in ${careerGamesPlayed}! Only ${goalRecord - careerGoals} to go!`>
		<meta property="og:title" content=`${name} road to ${goalRecord}. Only ${goalRecord - careerGoals} to go! `>
		<meta name="description" content=`${name} has got ${goalRecord} in ${careerGamesPlayed}! Only ${goalRecord - careerGoals} to go!`>
		<meta property="og:url" content="https://gr895.com">
		<meta property="og:type" content="website">
		<title>GR895</title>
	</head>
	<body class="bg-[#d32f36] sm:p-1">

		<div class=" fixed -z-10 top-0 left-0 w-full h-screen mix-blend-luminosity opacity-5 flex items-center justify-center">
			<img title="AM34 Hero Shot" alt="Hero img" src={heroImage} class="object-cover h-[100%] w-[100%]" />
		</div>
		<div class="flex flex-col min-h-[95vh] items-center justify-center">
			<div class="flex flex-col lg:flex-row gap-8 lg:gap-16 items-center justify-center mb-4 lg:mb-16">
				<div class="relative flex flex-col h-fit">
					<div class="rounded-full overflow-hidden bg-white border-solid border-2 border-white ">
						<img class="w-[250px]" title=`${name} headshot` alt="headshot" src={headshot} />
					</div>
					<div class="rounded-full right-[40px] bottom-[-10px] absolute w-22 h-22 overflow-hidden bg-white border-solid border-2 border-[#00205b] ">
						<img class="w-16 h-16  " title=`TML Logo` alt="logo" src={teamLogo} />
					</div>
				</div>
				<div>
					<h1 class="text-[6rem] text-center lg:text-[15rem] text-white font-bold leading-[0.85] ">
						{careerGoals < goalRecord ? goalRecord - careerGoals : careerGoals}
					</h1>
					<h2 class="text-3xl lg:text-5xl text-center text-white font-bold ">
						{ careerGoals < goalRecord ? `Until 895! ` : `Career Goals!`}
					</h2>
				</div>
			</div>
			<div class="p-8">
				{futureGames.length > 0 ? (
						<h2 class=" w-full max-w-5xl text-3xl lg:text-5xl/2rem text-center text-white font-bold mb-8">
							{`${name} is projected to reach 895 goals by ${formattedDate} in a game against the ${
							theGame.awayTeam.abbrev != 'WSH' ?    
								`${theGame.awayTeam.placeName.default} ${theGame.awayTeam.commonName.default}`
							: theGame.homeTeam.abbrev} at the ${theGame.venue.default}.`}
						</h2>
						<p class="text-l lg:text-xl  text-center text-white font-bold">
							{ `${name} has ${careerGoals} goals in ${careerGamesPlayed} career games played!`}
						</p>
						
						<p class="text-l lg:text-xl text-center text-white font-bold mt-4 ">
							{`${goals} goals this season and is on pace for ${goalPace} goals with ${futureGames.length} games remaining. A Career Total of ${goalPace + careerGoals} goals.`}
						</p>
					) : (
						<h2 class=" w-full max-w-4xl text-3xl lg:text-5xl/2rem text-center text-white font-bold mb-8">
							{careerGoals < goalRecord ? (
								`There are no remaining games in the schedule to project when ${name} will reach ${goalRecord} goals.`
							): (
								`${name} is now the NHL'S all time leading goal scorer with ${careerGoals} in ${careerGamesPlayed} games played.`
							)}
						</h2>
					)
				}
			</div>
			<div class="font-mono text-white mt-5 mb-1 bottom-0 ">
				Created by <a class="text-white" href='https://arthursousa.com' title="Arthur Sousa" target="_blank">arthursousa.com</a>
			</div>
		</div>
		
	</body>
</html>
